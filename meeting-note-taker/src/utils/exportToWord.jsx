import { Document, Packer, Paragraph, HeadingLevel, AlignmentType, TextRun } from "docx";
import { saveAs } from "file-saver";

/**
 * Exports the provided text to a Word document with formatting
 * @param {string} text - The text content to export
 * @param {string} title - The title of the document
 * @returns {Promise<void>} - A promise that resolves when the export is complete
 */
const exportToWord = (text, title = "Meeting Notes") => {
  return new Promise((resolve, reject) => {
    try {
      // Get current date for the document header
      const currentDate = new Date().toLocaleDateString();

      // Create paragraphs from text, splitting by newlines
      const contentParagraphs = text
        ? text.split('\n').map(line =>
            new Paragraph({
              text: line || " ", // Empty lines need a space to render in Word
              spacing: {
                line: 1.15 * 240, // Line spacing (240 = 1 line)
                after: 120, // Space after paragraph (120 = 10pt)
              }
            })
          )
        : [new Paragraph("No notes available.")];

      // Create the document with proper formatting
      const doc = new Document({
        title: title,
        description: "Generated by Meeting Note Taker",
        sections: [
          {
            properties: {
              page: {
                margin: {
                  top: 1440, // 1 inch (1440 twips)
                  right: 1440,
                  bottom: 1440,
                  left: 1440,
                },
              },
            },
            children: [
              // Title
              new Paragraph({
                text: title,
                heading: HeadingLevel.HEADING_1,
                alignment: AlignmentType.CENTER,
                spacing: {
                  after: 240,
                },
              }),

              // Date
              new Paragraph({
                alignment: AlignmentType.RIGHT,
                children: [
                  new TextRun({
                    text: `Date: ${currentDate}`,
                    italics: true,
                  }),
                ],
                spacing: {
                  after: 480, // Extra space after date
                },
              }),

              // Content
              ...contentParagraphs,

              // Footer
              new Paragraph({
                text: "Generated by Meeting Note Taker - Privacy-First Speech-to-Text",
                alignment: AlignmentType.CENTER,
                spacing: {
                  before: 480,
                },
              }),
            ],
          },
        ],
      });

      // Generate the Word document as a blob
      Packer.toBlob(doc)
        .then((blob) => {
          // Use file-saver to trigger download
          const safeTitle = title.replace(/[^a-z0-9]/gi, '_').substring(0, 50);
          saveAs(blob, `${safeTitle}_${currentDate.replace(/\//g, '-')}.docx`);
          resolve();
        })
        .catch((error) => {
          console.error("Error creating Word document:", error);
          reject(error);
        });
    } catch (error) {
      console.error("Error in exportToWord:", error);
      reject(error);
    }
  });
};

export default exportToWord;
